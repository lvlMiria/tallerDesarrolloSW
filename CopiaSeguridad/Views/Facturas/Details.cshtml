@model Presentacion.Models.Factura
@*@model IEnumerable<Presentacion.Models.Factura>*@
@using System.Globalization
@using System.Text.Json
@using System.Text.Json.Serialization

@{
    ViewData["Title"] = "Detalle Factura";
    var datos = ViewBag.Datos as Dictionary<string, object>;
    var itemF = datos["Item"] as Item;
    var facturaF = datos["Factura"] as Factura;
    var controlF = datos["Control"] as ControlFactura;
}

<div class="card-body m-5" style="background-color:white; border-radius: 5px">
    <div class="d-flex flex-row-reverse">
        <a asp-action="ListaFacturas">
            Ver Lista <span class="material-icons">arrow_circle_right</span>
        </a>
    </div>
    <div class="container-fluid d-flex flex-column align-items-center">
        <div class="row">
            <h3>Factura</h3>
        </div>
    </div>

    <div class="container-fluid d-flex flex-column justify-content-center">

        <div class="row m-1">
            @*Item*@
            <label for="cboItems" class="form-label">Item</label>
            <div class="input-group mb-3">
                <select style="background-color: greenyellow" class="form-select" aria-label="cboItems" id="cboItems">
                    <option selected value="@itemF.CodItem">@itemF.DescItem</option>
                    @foreach (var item in ViewBag.Items)
                    {
                        <option value="@item.CodItem">@item.DescItem</option>
                    }
                </select>
            </div>
        </div>

        @*N°Factura*@
        <div class="row m-1">
            <label for="nFactura" class="form-label">N°Factura</label>
            <div class="input-group mb-3">
                <input id="nFactura" value="@facturaF.NumFactura" type="text" class="form-control" aria-label="nFactura">
            </div>
            <span id="msjErrorNum" class="alert-danger"></span>
        </div>

        @*Monto*@
        <div class="row m-1">
            <label for="txtMonto" class="form-label">Monto CLP</label>
            <div class="input-group mb-3">
                <span class="input-group-text">$</span>
                <input id="txtMonto" value="@facturaF.Monto" type="text" class="form-control" aria-label="txtMonto">
            </div>
            <span id="msjErrorMonto" class="alert-danger"></span>
        </div>

        <div class="row m-1">
            @*Empresa*@
            <label for="cboEmpresa" class="form-label">Empresa</label>
            <div class="input-group mb-3">
                <select class="form-select" aria-label="cboEmpresa" id="cboEmpresa">
                    <option selected value="@facturaF.Empresa">@facturaF.Empresa</option>
                    <option value="Comgrap">Comgrap</option>
                    <option value="Oasis-tec">Oasis-tec</option>
                </select>
            </div>
            <span id="msjErrorEmpresa" class="alert-danger"></span>
        </div>

        <input type="hidden" id="txtCodFactura" value="@facturaF.CodFactura"/>
        <input type="hidden" id="txtCodControl" value="@controlF.CodControl"/>
        <input type="hidden" id="txtCodPresupuesto" value="@controlF.CodPresupuesto" />

        @*Este div es solo para conseguir los elementos de ControlFactura*@
        <div id="control" data-items="@JsonSerializer.Serialize(ViewBag.Control, new JsonSerializerOptions { ReferenceHandler = ReferenceHandler.Preserve })"></div>
 
        @section scripts {
            <script>
                //Filtrar combobox escribiendo
                document.getElementById("cboEmpresa").addEventListener("input", function () {
                    var input, filter, select, options, option, i, txtValue;
                    input = this.value;
                    select = document.getElementById("cboEmpresa");
                    options = select.getElementsByTagName("option");
                    filter = input.toUpperCase();

                    for (i = 0; i < options.length; i++) {
                        option = options[i];
                        txtValue = option.textContent || option.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            option.style.display = "";
                        } else {
                            option.style.display = "none";
                        }
                    }
                });
            </script>

            <script>
                //BUSCAR COMO FILTRAR ENTRE LAS 8000+ EMPRESAS
                $.ajax({
                    url: '/Facturas/ObtenerEmpresas',
                    type: 'GET',
                    success: function (data) {
                        $('#cboEmpresa').empty();

                        $.each(data, function (index, option) {
                            $('#cboEmpresa').append($('<option>', {
                                value: option.rutEmpresa,
                                text: option.nomEmpresa
                            }));
                        });
                    }
                });
            </script>

            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script>
                //Para actualizar factura
                $(document).ready(function () {
                    $('#btnEditar').click(function () {
                        var txtCodFactura = document.getElementById("txtCodFactura").value;
                        var cboItems = document.getElementById("cboItems").value;
                        var nFactura = document.getElementById("nFactura").value;
                        var txtMonto = document.getElementById("txtMonto").value;
                        var cboEmpresa = document.getElementById('cboEmpresa').value;
                        var txtMes = document.getElementById("txtMes").value;
                        var txtAnio = document.getElementById("txtAnio").value;

                        mostrarError("msjErrorNum", "");
                        mostrarError("msjErrorMonto", "");
                        mostrarError("msjErrorEmpresa", "");
                        mostrarError("msjErrorMes", "");
                        mostrarError("msjErrorAnio", "");

                        function validarFormulario() {
                            var estado = true;
                            var numRegex = /^\d+$/;
                            var mesRegex = /^(1[0-2]|[1-9])$/;
                            var anioRegex = /^\d{1,4}$/; // Acepta de 1 a 4 dígitos del 0 al 9


                            if (nFactura == "") {
                                mostrarError("msjErrorNum", "Ingrese el número de factura");
                                estado = false;
                            }

                            if (txtMonto == "") {
                                mostrarError("msjErrorMonto", "Ingrese el monto");
                                estado = false;
                            }

                            if (cboEmpresa == "Seleccione una empresa") {
                                mostrarError("msjErrorEmpresa", "Seleccione una empresa");
                                estado = false;
                            }

                            if (txtMes == "") {
                                mostrarError("msjErrorMes", "Ingrese el mes contable");
                                estado = false;
                            }

                            if (txtAnio == "") {
                                mostrarError("msjErrorAnio", "Ingrese el año contable");
                                estado = false;
                            }
                            txtCodFactura = parseInt(txtCodFactura, 10);
                            cboItems = parseInt(cboItems, 10) & 0xFFFF;
                            txtMonto = parseInt(txtMonto, 10);
                            txtMes = parseInt(txtMes, 10) & 0xFF;
                            txtAnio = parseInt(txtAnio, 10) & 0xFFFF;

                            // Verificar si los valores son del tipo esperado
                            if (isNaN(parseInt(txtMonto))) {
                                mostrarError("msjErrorMonto", "El monto debe ser un número válido");
                                estado = false;
                            }

                            if (isNaN(parseInt(txtMes))) {
                                mostrarError("msjErrorMes", "El mes contable debe ser un número válido");
                                estado = false;
                            }

                            if (isNaN(parseInt(txtAnio))) {
                                mostrarError("msjErrorAnio", "El año contable debe ser un número válido");
                                estado = false;
                            }

                            if (!numRegex.test(txtMonto)) {
                                mostrarError("msjErrorMonto", "Ingrese solo números para el monto");
                                estado = false;
                            }

                            if (!mesRegex.test(txtMes)) {
                                mostrarError("msjErrorMes", "Ingrese solo números en formato MM");
                                estado = false;
                            }

                            if (!anioRegex.test(txtAnio)) {
                                mostrarError("msjErrorAnio", "Ingrese solo números en formato yyyy");
                                estado = false;
                            }

                            return estado;
                        }
                        function mostrarError(spanId, mensaje) {
                            var spanError = document.getElementById(spanId);
                            spanError.innerText = mensaje;
                        }

                        if (validarFormulario()) {
                            console.log("Validado");
                            $.ajax({
                                url: '/Facturas/Edit',
                                type: 'POST',
                                data: { id: txtCodFactura, codFactura: txtCodFactura, numFactura: nFactura, monto: txtMonto, mesContable: txtMes, anioContable: txtAnio, empresa: cboEmpresa },
                                success: function (data) {
                                    //todo ok, paso a actualizar controlFactura
                                    var txtCodControl = document.getElementById('txtCodControl').value;
                                    var txtCodPresupuesto = document.getElementById('txtCodPresupuesto').value;
                                    var rdbContrato = document.getElementById('rdbContrato');
                                    var rdbSIT = document.getElementById('rdbSIT');
                                    var txtSIT = document.getElementById('txtSIT').value;
                                    var origen = ""
                                    var txtComentario = document.getElementById('txtComentario').value;
                                    var dtRecepcion = document.getElementById('dtRecepcion').value;
                                    var dtEntrega = document.getElementById('dtEntrega').value;

                                    txtCodControl = parseInt(txtCodControl, 10);
                                    txtCodPresupuesto = parseInt(txtCodPresupuesto, 10);

                                    if (rdbSIT.checked) {
                                        origen = "sit-" + txtSIT;
                                    } else if (rdbContrato.checked) {
                                        origen = "contrato";
                                    }

                                    $.ajax({
                                        url: '/ControlFacturas/Edit',
                                        type: 'POST',
                                        data: { id: txtCodControl, codControl: txtCodControl, codPresupuesto: txtCodPresupuesto, codFactura: txtCodFactura, origen: origen, fechaRecepcion: dtRecepcion, fechaEntrega: dtEntrega, comentario: txtComentario },
                                        success: function (data) {
                                            $('#modalEdicion').modal("show");
                                            $('#cerrarModal').click(function () {
                                                $('#modalEdicion').modal('hide');
                                            });
                                        },
                                        error: function (xhr, status, error) {
                                            console.log("Control fallo");
                                        }

                                    });
                                },
                                error: function (xhr, status, error) {
                                    console.log("Error en la solicitud AJAX: " + error);
                                    console.log("Factura fallo");

                                }

                            });
                        }
                    });
                });
            </script>

@*             <script>
                if (controlItems[i].Origen === "contrato") {
                    $('#rdbContrato').prop('checked', true);
                } else {
                    $('#rdbSIT').prop('checked', true);
                    //Separa y almacena el número
                    var separarSIT = controlItems[i].Origen.split("-");
                    txtSIT.value = separarSIT[1];
                }
            </script> *@

        }

        <div class="row m-3">
            <label for="dtRecepcion">Fecha de Recepción</label>
            <input id="dtRecepcion" value="@((controlF.FechaRecepcion ?? DateTime.Now).ToString("yyyy-MM-dd"))" class="form-control" type="date" />
            <span id="msjErrorRecepcion" class="alert-danger"></span>
        </div>

        <div class="row m-3">
            <label for="dtEntrega">Fecha de Entrega</label>
            <input id="dtEntrega" value="@((controlF.FechaEntrega ?? DateTime.Now).ToString("yyyy-MM-dd"))" class="form-control" type="date" />
            <span id="msjErrorEntrega" class="alert-danger"></span>
        </div>

        @*Mes y año contable*@
        <div class="row m-1">
            <div class="col-6">
                <label for="txtMes">Mes Contable</label>
                <div class="input-group mb-3">
                    <input placeholder="MM" value="@facturaF.MesContable" id="txtMes" type="text" class="form-control" aria-label="txtMes">
                </div>
                <span id="msjErrorMes" class="alert-danger"></span>
            </div>
            <div class="col-6">
                <label for="txtAnio">Año Contable</label>
                <div class="input-group mb-3">
                    <input placeholder="yyyy" value="@facturaF.AnioContable" id="txtAnio" type="text" class="form-control" aria-label="txtAnio">
                </div>
                <span id="msjErrorAnio" class="alert-danger"></span>
            </div>
        </div>

        @*SIT o Contrato*@
        <div class="row m-2">
            <p>Origen</p>
            <div class="col-6">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="rdbContratoSIT" id="rdbContrato" @(controlF.Origen == "contrato" ? "checked" : "")>
                    <label class="form-check-label" for="rdbContrato">
                        Contrato
                    </label>
                </div>
                <span id="msjErrorContrato" class="alert-danger"></span>
            </div>
            <div class="col-6">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="rdbContratoSIT" id="rdbSIT" @(controlF.Origen.StartsWith("sit") ? "checked" : "")>
                    <label class="form-check-label" for="rdbSIT">
                        SIT
                    </label>
                </div>
                <div class="input-group mb-3">
                    @if (controlF.Origen.StartsWith("sit"))
                    {
                        var numeroSIT = controlF.Origen.Substring(4);
                        <input id="txtSIT" type="text" class="form-control" aria-label="txtSIT"
                               value="@numeroSIT">
                    }
                    else
                    {
                        <input id="txtSIT" type="text" class="form-control" aria-label="txtSIT" disabled>
                    }
                </div>
            </div>
        </div>

        @*Comentario*@
        <div class="row m-1">
            <label for="txtComentario" class="form-label">Comentario</label>
            <div class="input-group mb-3">
                <input value="@controlF.Comentario" name="comentario" type="text" class="form-control" id="txtComentario">
            </div>
        </div>

        @*Botones*@
        <div class="row" style="margin-top:40px">

            <div class="col-12 col-md-4">
                <div class="m-2">
                    <a asp-action="ListaFacturas">
                        <div class="d-grid gap-2">
                            <button type="button" style=" background-color: forestgreen; color: white;" class="btn">Volver</button>
                        </div>
                    </a>
                </div>
            </div>


            <div class="col-12 col-md-4">
                <div class="m-2">
                        <div class="d-grid gap-2">
                            <button id="btnEditar" type="button" style=" background-color: forestgreen; color: white;" class="btn">Editar</button>
                        </div>
                </div>
            </div>

        </div>

    </div>

</div>

@*MODAL EDICIÓN EXISTOSA*@
<div class="modal" tabindex="-1" role="dialog" id="modalEdicion">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edición exitosa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Los datos de la factura se han actualizado exitosamente.</p>
            </div>
            <div class="modal-footer">
                <button id="cerrarModal" type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@* <div>
    <h4>Factura</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NumFactura)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NumFactura)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Monto)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Monto)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Empresa)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Empresa)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TipoCambio)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TipoCambio.Mes)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.CodFactura">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
 *@